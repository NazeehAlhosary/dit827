version: 2.1
jobs:
  # Python build
  Python:
    working_directory: ~/Project
    docker:
      - image: circleci/python:3.6.4
    environment:
      PIPENV_VENV_IN_PROJECT: true
    steps:
      - checkout
        #This gives circleCi access to dependency locations
      - run: sudo chown -R circleci:circleci /usr/local/bin
      - run: sudo chown -R circleci:circleci /usr/local/lib/python3.6/site-packages
        #Restores the cache if no changes have been made to the Pipfile
      - restore_cache:
          key: raspberry-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
        # Here we install the dependencies 
      - run: 
          command: |
            sudo pip install pipenv
            pipenv install pytest
        # Here the dependencies are saved in a cache.
      - save_cache:
          key: raspberry-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
          paths:
            - ".venv"
            - "/usr/local/bin"
            - "/usr/local/lib/python3.6/site-packages"
          #Here the tests are run.
      - run: 
          command: |
            cd Pi
            pipenv run pytest
      - store_test_results:
          path: test-results

  #Android build
  Android:
    working_directory: ~/Project
    environment:
      # Configure the JVM and Gradle to avoid OOM errors
      _JAVA_OPTIONS: "-Xmx3g"
      GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2"
    docker:
      - image: circleci/openjdk:11.0.3-jdk-stretch
      - image: circleci/postgres:12-alpine

    steps:
      - checkout
      - restore_cache:
          key: v1-gradle-wrapper-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
      - restore_cache:
          key: v1-gradle-cache-{{ checksum "build.gradle" }}    
      - run:
          name: ./gradlew test 
          command: |
            cd Android/Tests/java
            # Get list of classnames of tests that should run on this node
            CLASSNAMES=$(circleci tests glob "**/*.java" \
              | cut -c 1- | sed 's@/@.@g' \
              | sed 's/.\{5\}$//' \
              | circleci tests split --split-by=timings --timings-type=classname)
            cd ../../..
            # Format the arguments to "./gradlew test"
            GRADLE_ARGS=$(echo $CLASSNAMES | awk '{for (i=1; i<=NF; i++) print "--tests",$i}')
            echo "Prepared arguments for Gradle: $GRADLE_ARGS"
            ./gradlew test $GRADLE_ARGS
      - save_cache:
          paths:
            - ~/.gradle/wrapper
          key: v1-gradle-wrapper-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
      - save_cache:
          paths:
            - ~/.gradle/caches
          key: v1-gradle-cache-{{ checksum "build.gradle" }}
workflows:
  version: 2
  build_and_test:
    jobs:
      - Android
      - Python